/* RATIONAL SCHEMA
HERO(HID, HNAME, MINVALUE, MAXVALUE, USES)
PRIMARY KEY (HID)

VILLAIN(VID, VNAME)
PRIMARY KEY (HID)

GAME(GAMEID)
PRIMARY KEY (GAMEID)

ACTIONS(GAMEID, HID, VID, TURNCOUNTER, DAMAGEDONE)
PRIMARY KEY(HID, VID, GAMEID, TURNCOUNTER)
FOREIGN KEY (GAMEID) REFERENCES GAME
FOREIGN KEY (HID) REFERENCES HERO (HID)
FOREIGN KEY (VID) REFERENCES VILLAIN (VID)

*/
-- =================================== DDL ===================================


IF OBJECT_ID('HERO') IS NOT NULL
DROP TABLE HERO;

IF OBJECT_ID('VILLAIN') IS NOT NULL
DROP TABLE VILLAIN;

IF OBJECT_ID('GAME') IS NOT NULL
DROP TABLE GAME;

IF OBJECT_ID('ACTIONS') IS NOT NULL
DROP TABLE ACTIONS;

CREATE TABLE HERO (
    HID INT,
    HNAME NVARCHAR(100),
    MINVALUE INT,
    MAXVALUE INT,
    USES INT,
PRIMARY KEY (HID)
);

CREATE TABLE VILLAIN (
    VILLAINID INT,
    VNAME NVARCHAR(100),
    HITPOINTS INT,
PRIMARY KEY (VILLAINID)
);

CREATE TABLE GAME (
    GAMEID INT,
    GAMETIME DATE,
    WHOWON NVARCHAR(100),
PRIMARY KEY (GAMEID)
);

CREATE TABLE ACTIONS (
    HID INT,
    VILLAINID INT,
    GAMEID INT,
    TURNCOUNTER INT,
    HITPOINTS INT,
PRIMARY KEY(HID, VILLAINID, GAMEID, TURNCOUNTER),
FOREIGN KEY (GAMEID) REFERENCES GAME (GAMEID),
FOREIGN KEY (HID) REFERENCES HERO (HID),
FOREIGN KEY (VILLAINID) REFERENCES VILLAIN (VILLAINID)
);

-- ======================= INSERTING DATA /DML ===========================

INSERT INTO HERO(HID, HNAME, MINVALUE, MAXVALUE, USES) VALUES
(1, 'Mr swinburne', 0, 10, 2),
(2, 'Ms Swinburne', 0, 8, 2)


Select * from hero


INSERT INTO VILLAIN(villainid, vname, HITPOINTS) VALUES 
(1, 'BadBoy', 3),
(2, 'Dion', 1),
(3, 'Anh', 10),
(4, 'James', 5)


INSERT INTO GAME (GAMEID, GAMETIME, WHOWON) VALUES
(1, '2021-10-04', 'Villains Won'),
(2, '2021-10-04', 'Heroes Won'),
(3, '2021-10-04', 'Villains Won'),
(4, '2021-10-04', 'Villains Won');

INSERT INTO ACTIONS(Hid, VILLAINID, GAMEID, turncounter, HITPOINTS) VALUES
(1, 1, 1, 1, 3),
(2, 2, 2, 2, 2)

-- ============================================
select * from hero

Select * from VILLAIN
delete  from Villain

select * from game 

select * from actions

-- ==============HERO=STORED PROCEDURES===============================================

-- post_HERO

IF OBJECT_ID('POST_HERO') IS NOT NULL
    DROP PROCEDURE POST_HERO;

GO
CREATE PROCEDURE POST_HERO
    @pHID INT,
    @PHNAME NVARCHAR(100),
    @pMINVALUE INT,
    @pMAXVALUE INT,
    @pUSES INT
AS
BEGIN
    BEGIN TRY
        INSERT INTO HERO
        (HID, HNAME, MINVALUE, MAXVALUE, USES)
    VALUES
        (@pHID, @pHNAME, @pMINVALUE, @pMAXVALUE, @pUSES)
    END TRY
    BEGIN CATCH
    END CATCH
END
GO

-- UPDATE HERO

IF OBJECT_ID('PUT_HERO') IS NOT NULL
    DROP PROCEDURE PUT_HERO;

GO
CREATE PROCEDURE PUT_HERO
    @pHID INT,
    @PHNAME NVARCHAR(100),
    @pMINVALUE INT,
    @pMAXVALUE INT,
    @pUSES INT
AS
BEGIN
    BEGIN TRY
        UPDATE HERO SET HNAME = @pHNAME, MINVALUE = @pMINVALUE, MAXVALUE = @pMAXVALUE, USES = @pUSES
            WHERE HID = @pHID
    END TRY
    BEGIN CATCH
    END CATCH
END
GO

-- DELETE HERO
IF OBJECT_ID('DELETE_HERO') IS NOT NULL
    DROP PROCEDURE DELETE_HERO;

GO
CREATE PROCEDURE DELETE_HERO
    @pHID INT
AS
BEGIN
    BEGIN TRY
    DELETE FROM HERO
       WHERE HID = @pHID
    END TRY
    BEGIN CATCH
    END CATCH
END
GO


-- ==============VILLAIN=STORED PROCEDURES===============================================

-- POST_VILLAIN

IF OBJECT_ID('POST_VILLAIN') IS NOT NULL
    DROP PROCEDURE VILLAIN;

GO
CREATE PROCEDURE POST_VILLAIN
    @pVillainID INT,
    @pVName NVARCHAR(100),
    @pHitPoints INT
AS
BEGIN
    BEGIN TRY
        INSERT INTO VILLAIN
        (VillainID, VNAME, HITPOINTS)
    VALUES
        (@pVillainID, @pVName, @pHitPoints)
    END TRY
    BEGIN CATCH
    END CATCH
END
GO

-- UPDATE HERO

IF OBJECT_ID('PutVillain') IS NOT NULL
    DROP PROCEDURE PutVillain;

GO
CREATE PROCEDURE PutVillain
     @pVillainID INT,
    @pVName NVARCHAR(100),
    @pHitPoints INT
AS
BEGIN
    BEGIN TRY
        UPDATE VILLAIN SET VNAME = @pVName, HITPOINTS = @pHitPoints
            WHERE VillainID = @pVillainID
    END TRY
    BEGIN CATCH
    END CATCH
END
GO

-- DELETE HERO
IF OBJECT_ID('DELETE_Villain') IS NOT NULL
    DROP PROCEDURE DELETE_Villain;

GO
CREATE PROCEDURE DELETE_Villain
    @pVillainID INT
AS
BEGIN
    BEGIN TRY
    DELETE FROM VILLAIN
       WHERE VillainID = @pVillainID
    END TRY
    BEGIN CATCH
    END CATCH
END
GO

-- Post GAME 

IF OBJECT_ID('POST_GAME') IS NOT NULL
    DROP PROCEDURE POST_GAME;

GO
CREATE PROCEDURE POST_GAME
    @pGameID INT,
    @pGAMETIME DATE,
    @pWHOWON NVARCHAR(100)
AS
BEGIN
    BEGIN TRY
        INSERT INTO GAME
        (GAMEID, GAMETIME, WHOWON)
    VALUES
        (@pGameID, @pGAMETIME, @pWHOWON)
    END TRY
    BEGIN CATCH
    END CATCH
END
GO

-- POST ACTIONS

IF OBJECT_ID('POST_ACTIONS') IS NOT NULL
    DROP PROCEDURE POST_ACTIONS;

GO
CREATE PROCEDURE POST_ACTIONS
    @pHID INT,
    @pVillainID INT,
    @pGameID INT,
    @pTURNCOUNTER INT,
    @pHITPOINTS INT
AS
BEGIN
    BEGIN TRY
        INSERT INTO ACTIONS
        (HID, VILLAINID, GAMEID, TURNCOUNTER, HITPOINTS)
    VALUES 
        (@pHID, @pVillainID, @pGameID, @pTURNCOUNTER, @pHITPOINTS)
    END TRY
    BEGIN CATCH
    END CATCH
END
GO
